name: ci

on:
    push:
        branches: [main]
        paths-ignore:
            - ".vscode/**"
            - "**/*.md"
    pull_request:
        branches: [main]
        paths-ignore:
            - ".vscode/**"
            - "**/*.md"
    workflow_dispatch:
        inputs:
            publish_image:
                description: "Push runtime image to Docker Hub"
                default: "false"
                required: false

jobs:
    semver:
        name: Semantic version
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2

            - name: Github env
              id: github_env
              env:
                  GITHUB_MAIN: ${{ github.ref == 'refs/heads/main' }}
              run: ./run.sh github_env

            - name: Tag version
              id: tag_version
              uses: mathieudutour/github-tag-action@d745f2e74aaf1ee82e747b181f7a0967978abee0 # v6.0
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  dry_run: ${{ steps.github_env.outputs.GITHUB_MAIN != 'true' }}
                  create_annotated_tag: true
                  release_branches: "^main$"

            - name: Calc semver
              id: calc_semver
              env:
                  GITHUB_SHA: ${{ github.sha }}
                  GITHUB_MAIN: ${{ steps.github_env.outputs.GITHUB_MAIN }}
                  SEMVER: ${{ steps.tag_version.outputs.new_version }}
              run: ./run.sh calc_semver

        outputs:
            GITHUB_MAIN: ${{ steps.github_env.outputs.GITHUB_MAIN }}
            SEMVER: ${{ steps.calc_semver.outputs.SEMVER }}

    build-test:
        name: Build and test
        runs-on: ubuntu-latest
        needs:
            - semver
        env:
            DOCKER_REPO: media-share
            SEMVER: ${{ needs.semver.outputs.SEMVER }}

        steps:
            - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2

            - uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # v2.0.0

            - uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v2.0.0

            - name: Build, test and extract artifacts
              run: ./run.sh build

            - name: Upload server runtime
              uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
              if: always()
              with:
                  name: server-runtime
                  path: artifacts/runtime

            - name: Upload test results
              uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
              if: always()
              with:
                  name: test-results
                  path: artifacts/test-results

            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action@2a60c5d47eb29cd5cc922f51bbea18e148f56203 # v2.0.0
              if: always()
              with:
                github_token: ${{secrets.GITHUB_TOKEN}}
                junit_files: artifacts/test-results/*.xml

            - name: Scan runtime image
              env:
                  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
              run: ./run.sh scan

            - name: Log in to Docker Hub
              uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v2.0.0
              if: ${{ needs.semver.outputs.GITHUB_MAIN == 'true' || github.event.inputs.publish_image == 'true' }}
              with:
                  username: ${{secrets.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: Build and push multiplatform runtime image to Docker Hub
              if: ${{ needs.semver.outputs.GITHUB_MAIN == 'true' || github.event.inputs.publish_image == 'true' }}
              env:
                  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
              run: ./run.sh push
