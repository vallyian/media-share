name: ci

on:
    push:
        branches: [main]

    pull_request:
        branches: [main]

    workflow_dispatch:
        inputs:
            publish_image:
                description: "Push runtime image to Docker Hub"
                default: "false"
                required: false

jobs:
    semver:
        name: Semantic version
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout

            - name: Tag version
              id: tag
              uses: mathieudutour/github-tag-action@fcfbdceb3093f6d85a3b194740f8c6cec632f4e2 # v6.1
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  dry_run: ${{ github.ref != 'refs/heads/main' }}
                  create_annotated_tag: true
                  release_branches: "^main$"

            - name: Calc semver
              id: semver
              env:
                  GITHUB_MAIN: ${{ github.ref == 'refs/heads/main' }}
                  NEW_VERSION: ${{ steps.tag.outputs.new_version }}
                  GITHUB_SHA: ${{ github.sha }}
              run: |
                  if [ "${GITHUB_MAIN}" = "true" ]; then
                      echo "::set-output name=SEMVER::${NEW_VERSION}"
                      echo "SEMVER: ${NEW_VERSION}"
                  else
                      echo "::set-output name=SEMVER::${NEW_VERSION}-${GITHUB_SHA}"
                      echo "SEMVER: ${NEW_VERSION}-${GITHUB_SHA}"
                  fi

        outputs:
            SEMVER: ${{ steps.semver.outputs.SEMVER }}

    build-test:
        name: Build and test
        runs-on: ubuntu-latest
        needs: [semver]
        env:
            SEMVER: ${{needs.semver.outputs.SEMVER}}

        steps:
            - name: Checkout
              uses: actions/checkout

            - name: Setup Docker multiplatform
              uses: docker/setup-qemu-action

            - name: Setup Docker
              uses: docker/setup-buildx-action

            - name: Run build, unit test, lint
              run: |
                mkdir -p artifacts
                chmod 777 artifacts
                npm run docker:build

            - name: Run smoke test
              run: |
                mkdir -p artifacts/smoke
                chmod 777 artifacts/smoke
                npm run docker:smoke

            - name: Export artifacts
              uses: actions/upload-artifact
              with:
                  name: artifacts
                  path: artifacts

            - name: Publish test results
              uses: EnricoMi/publish-unit-test-result-action@283dea176069279a9076e77b548668a8e4f0c31b # v2.9.0
              with:
                  github_token: ${{secrets.GITHUB_TOKEN}}
                  junit_files: artifacts/unit/*.xml
                  fail_on: "test failures"

            - name: Scan runtime image
              env:
                  DOCKER_USERNAME: ${{vars.DOCKER_USERNAME}}
              run: npm run docker:scan

            - name: Check results
              run: npm run results

            - name: Sign in to Docker Hub
              uses: docker/login-action
              if: ${{ github.ref == 'refs/heads/main' || github.event.inputs.publish_image == 'true' }}
              with:
                  username: ${{vars.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: Build and push multiplatform runtime image to Docker Hub
              if: ${{ github.ref == 'refs/heads/main' || github.event.inputs.publish_image == 'true' }}
              env:
                  GITHUB_MAIN: ${{ github.ref == 'refs/heads/main'}}
                  DOCKER_USERNAME: ${{vars.DOCKER_USERNAME}}
              run: npm run push

    codeql:
        name: CodeQL analysis
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write

        steps:
            - name: Checkout
              uses: actions/checkout

            - name: Initialize CodeQL
              uses: github/codeql-action/init
              with:
                  languages: "javascript"

            - name: Build javascript
              run: npm run build

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze
